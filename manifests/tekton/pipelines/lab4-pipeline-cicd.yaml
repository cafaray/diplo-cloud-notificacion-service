apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-cicd
spec:
  description: |
    Describe your pipeline
  params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: branch-name
      type: string
      description: The git repository URL to clone from.
    - name: maven-image
      default: gcr.io/cloud-builders/mvn@sha256:8f38a2667125a8d83f6e1997847fedb6a06f041c90e2244884153d85d95f869b
      type: string
      description: Image for compile pom
    - name: image-name
      type: string
      description: The image full path to host the built image, with version tag, e.g. image-registry.openshift-image-registry.svc:5000/tekton-pipelines/spring-boot-docker:v1.0.0.
    - name: deployment-name
      type: string
      description: Represent the Deployment which will be created at Kubernetes
  # Workspaces
  workspaces:
    - name: workspace
    - name: maven-settings
    - name: dockerconfig-ws
    - name: empty-dir
  # Taksks
  tasks:
    # 1. Task - fetch-repository
    - name: fetch-repository
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch-name)
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: output
          workspace: workspace

    # 2. Task - maven build
    - name: maven
      taskRef:
        name: maven
      runAfter:
        - fetch-repository
      params:
        - name: GOALS
          value:
            - -B
            - -DskipTests
            - clean
            - package
        - name: MAVEN_IMAGE
          value: $(params.maven-image)
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: workspace

    # 3. Task - buildah build & push
    - name: buildah
      taskRef:
        name: buildah
      runAfter:
        - maven
      params:
        - name: IMAGE
          value: "$(params.image-name)"
        - name: TLSVERIFY
          value: "false"
        - name: STORAGE_DRIVER
          value: "vfs"
      workspaces:
        - name: source
          workspace: workspace
        - name: dockerconfig
          workspace: dockerconfig-ws

    # 4. Task - kubectl deploy
    - name: deploy
      taskRef:
        name: kubernetes-actions
      runAfter:
        - buildah
      params:
        # - name: image
        #  value: gcr.io/cloud-builders/kubectl@sha256:cc2e44c3355dad01d5fb017e1d1b22f1e929016360df6b311687174eb2536bed
        - name: script
          value: |
            # curl -sSL https://raw.githubusercontent.com/cafaray/diplo-cloud-notificacion-service/refs/heads/main/manifests/tekton/resources/scripts/deployment.sh | bash
            echo " deployment-name: $(params.deployment-name) "
            kubectl delete deployment $(params.deployment-name)
            kubectl create deployment $(params.deployment-name) --image=$(params.image-name)
            kubectl scale deployment $(params.deployment-name) --replicas=3
            echo " End deployment"
        # - name: args
        #  value:
        #    - 3
      workspaces:
      - name: kubeconfig-dir
        workspace: empty-dir
      - name: manifest-dir
        workspace: empty-dir